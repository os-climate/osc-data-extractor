---
name: "♻️ Update shared DevOps tooling"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * MON"

jobs:
  update-actions:
    name: "Update DevOps tooling"
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: mandatory to update content/actions/PRs
      contents: write
      actions: write
      pull-requests: write

    steps:
      - name: "Checkout primary repository"
        uses: actions/checkout@v4
        with:
          # Note: Requires a specific/defined Personal Access Token
          token: ${{ secrets.ACTIONS_WORKFLOW }}

      - name: "Pull workflows from central repository"
        uses: actions/checkout@v4
        with:
          repository: "os-climate/devops-toolkit"
          path: ".devops"

      - name: "Purge this working branch, if necessary"
        id: remove-branch
        continue-on-error: true
        # Remove update-devops-tooling branch, if it exists
        run: |
          git branch -d update-devops-tooling || :
          git push origin --delete update-devops-tooling || :

      - name: "Update repository workflows and create PR"
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Define a function to allow selective opt-out of devops tooling
          OPT_OUT=".devops-exclusions"
          perform_operation() {
            ELEMENT="$1"
            if [ ! -f "$OPT_OUT" ]; then
              # Opt-out file does not exist; all operations will be performed
              return 1
            else
              if grep -Fxq "$ELEMENT" "$OPT_OUT"
              then
                # Element is excluded from processing
                return 0
              else
                # Element should be processed
                return 1
              fi
            fi
          }

          # Remove update-devops-tooling branch if it exists
          git branch -d update-devops-tooling || true
          git push origin --delete update-devops-tooling || true

          # Configure GIT
          git config user.name "github-actions[bot]"
          git config user.email \
           "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "update-devops-tooling"

          FOLDERS=".github .github/workflows scripts"
          for FOLDER in ${FOLDERS}; do
            # Check to see if operation should be skipped
            if (perform_operation "$FOLDER"); then
              echo "Opted out of DevOps folder: $FOLDER"
              continue
            else
              # If necessary, create target folder
              if [ ! -d "$FOLDER" ]; then
                echo "Creating target folder: $FOLDER"
                mkdir "$FOLDER"
              fi
              # Update folder contents
              echo "Updating folder contents: $FOLDER"
              cp -a .devops/"$FOLDER"/. "$FOLDER"
            fi
          done

          # Copy specified files into repository root
          FILES=".pre-commit-config.yaml .prettierignore .gitignore"
          for FILE in ${FILES}; do
            if (perform_operation "$FILE"); then
              echo "Opted out of DevOps file: $FILE"
            else
              echo "Copying file: $FILE"
              cp .devops/"$FILE" "$FILE"
            fi
          done

          # If no changes required, do not throw an error
          if (git status); then
            echo "No updates/changes to commit"; exit 0
          else
            git add .
            git commit -m \
              "Chore: Update DevOps tooling from central repository [skip-ci]"
            git push --set-upstream origin update-devops-tooling
            gh pr create --title \
              "Chore: Pull DevOps tooling from upstream repository" \
              --body 'Automated by a GitHub workflow: bootstrap.yaml'
          fi
